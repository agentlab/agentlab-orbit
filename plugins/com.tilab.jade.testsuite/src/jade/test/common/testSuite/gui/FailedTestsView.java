/*****************************************************************
JADE - Java Agent DEvelopment Framework is a framework to develop
multi-agent systems in compliance with the FIPA specifications.
Copyright (C) 2000 CSELT S.p.A. 

GNU Lesser General Public License

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation, 
version 2.1 of the License. 

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the
Free Software Foundation, Inc., 59 Temple Place - Suite 330,
Boston, MA  02111-1307, USA.
*****************************************************************/

package jade.test.common.testSuite.gui;

import javax.swing.text.*;

/**
 * @author Alessandro Negri - AOTLab UniPR
 * @author Matteo Bisi - UniPR
 * @author Yuri Ferrari - UniPR
 * @author Rossano Vitulli - UniPR
 * @version $Date: December 2003
 */

/** 
 * This class implements the form where informations about failed tests
 * are written.
 */
public class FailedTestsView extends javax.swing.JPanel implements java.io.Serializable {
    /** Creates new form FailedTestsView */
    public FailedTestsView() {
        initComponents();
        clear();
    }
    
    public void print(String s) {
        jEditorPane.setText(s);
    }
    
    public void clear() {
        jEditorPane.setText("");
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPopupMenu = new javax.swing.JPopupMenu();
        CopyItem = new javax.swing.JMenuItem();
        CopyAllItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        ClearItem = new javax.swing.JMenuItem();
        jScrollPane = new javax.swing.JScrollPane();
        jEditorPane = new javax.swing.JEditorPane();

        CopyItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/test/common/testSuite/gui/images/editcopy.png")));
        CopyItem.setText("Copy");
        CopyItem.setToolTipText("Copy selected text to Clipboard");
        CopyItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CopyItemActionPerformed(evt);
            }
        });
        CopyItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                CopyItemMousePressed(evt);
            }
        });

        jPopupMenu.add(CopyItem);

        CopyAllItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/test/common/testSuite/gui/images/copy_all.png")));
        CopyAllItem.setMnemonic('P');
        CopyAllItem.setText("Copy All");
        CopyAllItem.setToolTipText("Copy all contents to Clipboard");
        CopyAllItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                CopyAllItemMousePressed(evt);
            }
        });

        jPopupMenu.add(CopyAllItem);

        jPopupMenu.add(jSeparator1);

        ClearItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/test/common/testSuite/gui/images/filenew.png")));
        ClearItem.setMnemonic('E');
        ClearItem.setText("Clear");
        ClearItem.setToolTipText("Clear all text");
        ClearItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ClearItemMousePressed(evt);
            }
        });

        jPopupMenu.add(ClearItem);

        setLayout(new java.awt.GridLayout(1, 1));

        jEditorPane.setEditable(false);
        jEditorPane.setToolTipText("Test's failure description");
        jEditorPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jEditorPaneMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jEditorPaneMouseReleased(evt);
            }
        });

        jScrollPane.setViewportView(jEditorPane);

        add(jScrollPane);

    }//GEN-END:initComponents

    private void CopyItemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CopyItemMousePressed
        jEditorPane.copy();
    }//GEN-LAST:event_CopyItemMousePressed

    private void CopyAllItemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CopyAllItemMousePressed
        // Add your handling code here:
        jEditorPane.selectAll();
        jEditorPane.copy();
    }//GEN-LAST:event_CopyAllItemMousePressed

    private void CopyItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CopyItemActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_CopyItemActionPerformed

    private void ClearItemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClearItemMousePressed
        clear();
    }//GEN-LAST:event_ClearItemMousePressed

    private void jEditorPaneMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jEditorPaneMouseReleased
        // Add your handling code here:
        if(evt.isPopupTrigger()){
            jPopupMenu.show(evt.getComponent(),evt.getX(),evt.getY());
        }
  
    }//GEN-LAST:event_jEditorPaneMouseReleased

    private void jEditorPaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jEditorPaneMousePressed
        // Add your handling code here:
        CopyItem.setEnabled(jEditorPane.getSelectedText()!=null);
        CopyAllItem.setEnabled(jEditorPane.getText().length()!=0);
        ClearItem.setEnabled(jEditorPane.getText().length()!=0);
        if(evt.isPopupTrigger()){
            jPopupMenu.show(evt.getComponent(),evt.getX(),evt.getY());
         }
    }//GEN-LAST:event_jEditorPaneMousePressed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem ClearItem;
    private javax.swing.JMenuItem CopyAllItem;
    private javax.swing.JMenuItem CopyItem;
    private javax.swing.JEditorPane jEditorPane;
    private javax.swing.JPopupMenu jPopupMenu;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
    
}
